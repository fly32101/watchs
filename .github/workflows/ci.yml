name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        go: ['1.21']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: Debug directory structure (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          echo "Current directory:"
          pwd
          echo "Directory contents (root):"
          ls -la
          echo "All directories:"
          find . -type d | sort
          echo "All Go files:"
          find . -name "*.go" | sort
          echo "All main.go files:"
          find . -name "main.go" | sort

      - name: Debug directory structure (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "Current directory:"
          Get-Location
          echo "Directory contents (root):"
          Get-ChildItem -Force
          echo "All directories:"
          Get-ChildItem -Recurse -Directory | Select-Object FullName | Sort-Object FullName
          echo "All Go files:"
          Get-ChildItem -Path . -Filter "*.go" -Recurse | Select-Object FullName | Sort-Object FullName
          echo "All main.go files:"
          Get-ChildItem -Path . -Filter "main.go" -Recurse | Select-Object FullName | Sort-Object FullName

      - name: Get dependencies
        run: go mod download

      - name: Build (Linux/macOS)
        if: runner.os != 'Windows'
        run: go build -v -o ${{ matrix.output_name }} ./cmd/watchs

      - name: Build (Windows)
        if: runner.os == 'Windows'
        run: go build -v -o ${{ matrix.output_name }} ./cmd/watchs

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.output_name }}
          path: ${{ matrix.output_name }}
          retention-days: 5
