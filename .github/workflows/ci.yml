name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        go: ['1.21']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          cache: true

      - name: List directory structure (Linux/macOS)
        if: runner.os != 'Windows'
        run: find . -type d | sort

      - name: List directory structure (Windows)
        if: runner.os == 'Windows'
        run: Get-ChildItem -Recurse -Directory | Select-Object FullName | Sort-Object FullName

      - name: Get dependencies
        run: go mod download

      - name: Run tests
        run: go test -v ./...

  build:
    name: Build
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            output_name: watchs-linux-amd64
          - os: windows-latest
            output_name: watchs-windows-amd64.exe
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: true

      - name: List directory structure (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          echo "Current directory:"
          pwd
          echo "Directory contents:"
          ls -la
          echo "cmd directory contents:"
          ls -la cmd || echo "cmd directory not found"
          echo "Finding main.go files:"
          find . -name "main.go"

      - name: List directory structure (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "Current directory:"
          Get-Location
          echo "Directory contents:"
          Get-ChildItem -Force
          echo "cmd directory contents:"
          Get-ChildItem -Path cmd -Force -ErrorAction SilentlyContinue || echo "cmd directory not found"
          echo "Finding main.go files:"
          Get-ChildItem -Path . -Filter "main.go" -Recurse -ErrorAction SilentlyContinue | Select-Object FullName

      - name: Check main.go exists (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          if [ ! -f "cmd/watchs/main.go" ]; then
            echo "Error: cmd/watchs/main.go file not found. Please ensure this file is committed to the repository."
            exit 1
          fi
          
          echo "Content of main.go:"
          cat cmd/watchs/main.go

      - name: Check main.go exists (Windows)
        if: runner.os == 'Windows'
        run: |
          if (-Not (Test-Path -Path "cmd/watchs/main.go")) {
            echo "Error: cmd/watchs/main.go file not found. Please ensure this file is committed to the repository."
            exit 1
          }
          
          echo "Content of main.go:"
          Get-Content -Path "cmd/watchs/main.go"

      - name: Get dependencies
        run: go mod download

      - name: Build (Linux/macOS)
        if: runner.os != 'Windows'
        run: go build -v -o ${{ matrix.output_name }} ./cmd/watchs

      - name: Build (Windows)
        if: runner.os == 'Windows'
        run: go build -v -o ${{ matrix.output_name }} ./cmd/watchs

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.output_name }}
          path: ${{ matrix.output_name }}
          retention-days: 5 